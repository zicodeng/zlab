# The version of the specification format.
# This version defines the overall structure of an API specification â€“ what you can document and how you document it.
openapi: '3.0.0'

# Basic API information
info:
    version: 1.0.0
    title: API Example
    description: This is just a basic API example.
    termsOfService: http://swagger.io/terms/
    contact:
        name: Zico Deng
        email: zicodeng@gmail.com
        url: https://github.com/zicodeng
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html

# The servers section specifies the API server and base URL.
# You can define one or several servers, such as production and sandbox.
# Note: all API paths are relative to the server URL.
servers:
    - url: http://api.example.com/v1
      description: Production server
    - url: http://staging-api.example.com
      description: Internal staging server for testing

# The paths section defines individual endpoints (paths) in your API, and the HTTP methods (operations) supported by these endpoints.
paths:
    /users/{id}:
        get:
            tags:
                - Users
            summary: Gets a user by ID.
            operationId: getUserById
            parameters:
                - name: id
                  in: path
                  description: User ID
                  required: true
                  schema:
                      $ref: '#/components/schemas/User'
            responses:
                '200':
                    description: User successfully retrieved
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /users:
        post:
            tags:
                - Users
            summary: Creates a new user.
            operationId: createNewUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                '201':
                    description: New user created

components:
    # The global components/schemas section lets you define common data structures used in your API.
    schemas:
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
            required:
                - id
                - name
            example:
                id: 1
                name: Zico Deng
